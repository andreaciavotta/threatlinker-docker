
services:
  db:
    image: postgres:14
    container_name: db_postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user", "-d", "mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: django_app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/static:/app/static
      - ./backend/staticfiles:/app/staticfiles
      - cuda_persist:/cuda_persist  # Monta il volume per salvare lo stato di CUDA
      - pip_cache:/root/.cache/pip
      - huggingface_cache:/root/.cache/huggingface
    environment:
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=admin
      - HF_HOME=/root/.cache/huggingface
      - NLTK_DATA=/app/nltk_data
      - ENABLE_NLTK=true
      - PYTHONUNBUFFERED=1
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py import_data &&
             python manage.py create_superuser &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    container_name: celery_worker
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    depends_on:
      - redis
      - web
    volumes:
      - ./backend:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - NLTK_DATA=/app/nltk_data
      - ENABLE_NLTK=true

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    container_name: celery_beat
    depends_on:
      - redis
      - celery
    volumes:
      - ./backend:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ENABLE_NLTK=false
    command: celery -A threatlinker beat --loglevel=info

  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile.flower
    container_name: celery_flower
    depends_on:
      - redis
      - celery
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ENABLE_NLTK=false

volumes:
  postgres_data:
  pip_cache:
  huggingface_cache:
  cuda_persist:
